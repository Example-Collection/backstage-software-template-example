apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: go-http-server-template
  title: Go HTTP Server Template
  description: 'Start developing HTTP server with this template, using Go!'
  tags:
    - recommended
    - server
    - go
spec:
  owner: robbyra@gmail.com
  type: server
  parameters:
    - title: Fill in some steps
      required:
        - name
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the component
          ui:autofocus: true
          ui:options:
            rows: 5
    - title: Enter owner's email address
      required:
        - owner
      properties:
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:autofocus: true
          ui:options:
            rows: 5
    - title: Description
      required:
        - description
      properties:
        description:
          title: Description
          type: string
          description: Description about the component
          ui:autofocus: true
          ui:options:
            rows: 5
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
  steps:
    - id: fetch-base
      name: Fetch Skelecton code + template
      action: fetch:template
      input:
        url: ./skeleton
        values:
          name: ${{ parameters.name }}
          owner: ${{ parameters.owner }}

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}

